{"version":3,"sources":["xueli/List.js","xueli/Input.js","xueli/TodoList.js","index.js"],"names":["List","this","props","renderTodos","style","color","Component","Input","htmlFor","id","ref","inp","input","value","inpValue","type","onChange","handleChange","onClick","addTodo","TodoList","e","setState","target","state","todos","title","done","delTodo","idx","filter","item","index","localStorage","setItem","JSON","stringify","toggle","newTodos","parse","map","todo","checked","getItem","className","ReactDOM","render","document","getElementById"],"mappings":"sKAqBeA,E,kDAlBb,aAAc,wC,qDAIZ,OACE,6BACE,wDACI,4BACGC,KAAKC,MAAMC,aAAY,IAE9B,wDACE,wBAAIC,MAAO,CAACC,MAAiB,UACxBJ,KAAKC,MAAMC,aAAY,S,GAbnBG,a,OCkBJC,E,uKAhBD,IAAD,OACL,OACI,6BACI,2BAAOC,QAAQ,OAAf,YACA,2BACIC,GAAG,MACHC,IAAK,SAAAC,GAAG,OAAE,EAAKC,MAAQD,GACvBE,MAAOZ,KAAKC,MAAMY,SAClBC,KAAK,OACLC,SAAUf,KAAKC,MAAMe,eAEzB,4BAAQC,QAASjB,KAAKC,MAAMiB,SAA5B,qB,GAZIb,aCuGLc,EApGf,kDACI,WAAYlB,GAAO,IAAD,8BACd,cAAMA,IAWVe,aAAa,SAACI,GACV,EAAKC,SAAS,CAACR,SAASO,EAAEE,OAAOV,SAbnB,EA+BlBM,QAAU,WACkB,IAArB,EAAKK,MAAMV,WAGd,EAAKQ,SAAS,CACVG,MAAM,CACF,CACIC,MAAM,EAAKF,MAAMV,SACjBa,MAAK,IAHR,mBAKE,EAAKH,MAAMC,UAGtB,EAAKH,SAAS,CAACR,SAAS,OA5CV,EA8ClBc,QAAU,SAACC,GACP,EAAKP,SAAS,CACVG,MAAM,EAAKD,MAAMC,MAAMK,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOH,OACrD,WACFI,aAAaC,QACT,QACAC,KAAKC,UAAU,EAAKZ,MAAMC,YApDhB,EAwDlBY,OAAS,SAACL,GACN,IAAIM,EAAWH,KAAKI,MAAMJ,KAAKC,UAAU,EAAKZ,MAAMC,QACpDa,EAASN,GAAOL,MAAQW,EAASN,GAAOL,KACxC,EAAKL,SAAS,CACVG,MAAMa,KA5DI,EA+DlBnC,YAAc,SAACwB,GACX,OAAO,EAAKH,MAAMC,MAAMe,KAAI,SAACC,EAAKZ,GAC9B,GAAGF,GAAMc,EAAKd,KACd,OAAO,4BACH,2BACAT,QAAS,kBAAI,EAAKmB,OAAOR,IACzBa,QAASf,EACTZ,KAAK,aACL,8BAAO0B,EAAKf,OACZ,4BACAR,QAAS,kBAAI,EAAKU,QAAQC,KAD1B,qBAtER,EAAKL,MAAO,CACRV,SAAS,GACTW,MAAM,CACF,CAACC,MAAM,IAAIC,MAAK,GAChB,CAACD,MAAM,IAAIC,MAAK,GAChB,CAACD,MAAM,IAAIC,MAAK,GAChB,CAACD,MAAM,IAAIC,MAAK,KARV,EADtB,gEAkBQ,IAAIF,EAAQQ,aAAaU,QAAQ,SAC9BlB,GACCxB,KAAKqB,SAAS,CACVG,MAAMU,KAAKI,MAAMd,OArBjC,2CA8BQ,OAJAQ,aAAaC,QACT,QACAC,KAAKC,UAAUnC,KAAKuB,MAAMC,SAEvB,IA9Bf,+BAgFc,IAAD,EACiBxB,KAAKuB,MAArBC,EADD,EACCA,MAAMX,EADP,EACOA,SACDW,EAAMK,QAAO,SAAAC,GAAI,OAAGA,EAAKJ,QAEpC,OACI,yBAAKiB,UAAU,YACX,kBAAC,EAAD,CACI9B,SAAUA,EACVK,QAAWlB,KAAKkB,QAChBM,MAAOA,EACPR,aAAgBhB,KAAKgB,eAEzB,kBAAC,EAAD,CAAMd,YAAaF,KAAKE,YACpBsB,MAAOA,SA7F3B,GAA8BnB,aCA9BuC,IAASC,OAEP,6BAAK,kBAAC,EAAD,OACLC,SAASC,eAAe,U","file":"static/js/main.3d7758f9.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nclass List extends Component {\r\n  constructor(){\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>正在进行</h2>\r\n            <ul>\r\n              {this.props.renderTodos(false)}\r\n            </ul>\r\n        <h2>已经完成</h2>\r\n          <ul style={{color:3>21?'red':'green'}}>\r\n              {this.props.renderTodos(true)}\r\n          </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default List;\r\n","// import React from 'react';\r\nimport React, { Component } from 'react'\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={this.props.inpValue} \r\n                    type=\"text\"\r\n                    onChange={this.props.handleChange}\r\n                    />\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;\r\n","import React, { Component } from 'react'\r\n// import TodoList from './components/TodoList';\r\nimport List from './List';\r\nimport Input from './Input';\r\n\r\n  \r\nexport class TodoList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'1',done:false},\r\n                {title:'2',done:true},\r\n                {title:'3',done:true},\r\n                {title:'4',done:false},\r\n        ]\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos),\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        return true;\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false,\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        },()=>{\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n            return <li>\r\n                <input \r\n                onClick={()=>this.toggle(idx)}\r\n                checked={done} \r\n                type=\"checkbox\"/>\r\n                <span>{todo.title}</span>\r\n                <button \r\n                onClick={()=>this.delTodo(idx)}>删除</button>\r\n            </li>\r\n            }\r\n        }\r\n        )\r\n     } \r\n    render() {\r\n        const{todos,inpValue}=this.state;\r\n        let arr1 = todos.filter(item=>!item.done)\r\n        \r\n        return (\r\n            <div className=\"TodoList\">\r\n                <Input \r\n                    inpValue={inpValue}\r\n                    addTodo = {this.addTodo}\r\n                    todos={todos}\r\n                    handleChange = {this.handleChange}\r\n                        />\r\n                <List renderTodos={this.renderTodos}\r\n                    todos={todos}\r\n                    />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoList\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport List from './xueli/List';\nimport TodoList from './xueli/TodoList';\nimport Input from './xueli/Input';\n\nReactDOM.render(\n  \n  <div><TodoList /></div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}